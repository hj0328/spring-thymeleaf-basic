
# MessageCodesResolver 지원 기능
# 객체명과 필드명 조합의 에러코드 설정 시 여러 선택지 중 세밀한 에러코드를 사용한다.
# 예를 들어 required 에러 코드를 사용했다면, 바로 다음 에러 코드를 사용
#required.item.itemName=상품 이름은 필수입니다.
#required=필수 값 입니다.

#range.item.price=가격은 {0} ~ {1} 까지 허용합니다.
#range=범위 오류 입니다.

#max.item.quantity=수량은 최대 {0} 까지 허용합니다.
#totalPriceMin=가격 x 수량의 합은 {0}원 이상이어야 합니다. 현재 값 = {1}

#위 오류 코드는 다음 학습을 위해 생략

# 오류 코드 관리 전략
# 오류 코드는 범용적인 것을 기준으로 관리할 수 있다.
# 장점: 범용적이면 코드를 재활용할 수 있지만, 세세한 오류 코드를 만들 수 없다.
# 단점: 모든 오류에 일일히 세세한 오류 코드를 만들면 하드코딩해야할 작업이 너무 많아진다.
# 따라서 범용적으로 사용할 오류 코드는 간단한 메시지로 끝내고, 상세한 오류 코드는 구체적으로 사용만들자
# MessageCodesResolver 는 구체적인 것에서 덜 구체적인 것을 만들어서 오류 코드를 만든다.

#==Object Error==#
#Level1
totalPriceMin.item=상품의 가격 * 수량의 합은 {0}원 이상이어야 합니다. 현재 값 = {1}

#Level2
totalPriceMin=전체 가격은 {0}원 이상이어야 합니다. 현재 값 = {1}

#==Field Error==#
#Level1
required.item.itemName=상품 이름은 필수입니다. 
required.item.price=가격은 {0} ~ {1} 까지 허용합니다. 
max.item.quantity=수량은 최대 {0} 까지 허용합니다. 

#Level2 생략

#Level3
required.java.lang.String = 필수 문자입니다. required.java.lang.Integer = 필수 숫자입니다.
min.java.lang.String = {0} 이상의 문자를 입력해주세요. min.java.lang.Integer = {0} 이상의 숫자를 입력해주세요.
range.java.lang.String = {0} ~ {1} 까지의 문자를 입력해주세요.
range.java.lang.Integer = {0} ~ {1} 까지의 숫자를 입력해주세요.
max.java.lang.String = {0} 까지의 문자를 허용합니다.
max.java.lang.Integer = {0} 까지의 숫자를 허용합니다.

#Level4
required = 필수 값 입니다.
min= {0} 이상이어야 합니다.
range= {0} ~ {1} 범위를 허용합니다. max= {0} 까지 허용합니다.